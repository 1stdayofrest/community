<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--这个xml文件的根是mapper
    namespace写mapper全类名
    在mapper之内写出各种各样的标签
    每一个标签对应一个接口中的方法
    查询方法对应select标签，里面写select的sql
    id="selectById" 说明该select标签是为了selectById这个方法服务
    resultType="User" 声明返回的类名，全类名
    因为在application.properties中已经声明实体类所在包的包名,以后引用实体类的时候，不用写包名
    mybatis.type-aliases-package=com.nowcoder.community.entity-->
<mapper namespace="com.nowcoder.community.dao.UserMapper">
    <sql id="selectField">
      id, username,password,salt,email, type, status, activation_code, header_url,create_time
    </sql>
    <select id="selectById" resultType="User">
    select id,username,password,salt,email, type, status, activation_code, header_url,create_time
    from USER
    where id = #{id}
    </select>
    <select id="selectByName" resultType="User">
        select <include refid="selectField"></include>
        from USER
        where username = #{username}
    </select>
    <select id="selectByEmail" resultType="User">
        select id,username,password,salt,email, type, status, activation_code, header_url,create_time
        from USER
        where email = #{email}
    </select>
    <!-- insert标签
    依然要写方法id，还需要写，parameterType参数类型,keyProperty id主键的字段对应的属性，为什么？
    插入的时候，mysql会自动生产id,#{}里面写user的属性名-->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user (username, password, salt, email, type, status, activation_code, header_url, create_time)
        VALUES (#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{headerUrl},#{createTime})
    </insert>
    <!-- update标签
    需要声明参数类型，简单类型参数可以不用声明，查询一般需要声明返回类型-->
    <update id="updateStatus">
        update user set status = #{status} where id = #{id}
    </update>
    <update id="updatePassword">
        update user set password = #{password} where id = #{id}
    </update>
    <update id="updateHeader">
        update user set header_url = #{headerUrl} where id = #{id}
    </update>
</mapper>